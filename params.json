{"name":"Vagrant-lamp","tagline":"My default LAMP development stack for Vagrant","body":"Vagrant LAMP\r\n============\r\n\r\nMy default LAMP development stack configuration for Vagrant.\r\n\r\nInstallation:\r\n-------------\r\n\r\nInstall [vagrant](http://vagrantup.com/)\r\n\r\n    $ gem install vagrant\r\n\r\nDownload and Install [VirtualBox](http://www.virtualbox.org/)\r\n\r\nDownload a vagrant box (name of the box is supposed to be lucid32)\r\n\r\n    $ vagrant box add lucid32 http://files.vagrantup.com/lucid32.box\r\n\r\nClone this repository\r\n\r\nGo to the repository folder and launch the box\r\n\r\n    $ cd [repo]\r\n    $ vagrant up\r\n\r\nWhat's inside:\r\n--------------\r\n\r\nInstalled software:\r\n\r\n* Apache\r\n* MySQL\r\n* php\r\n* phpMyAdmin\r\n* Xdebug with Webgrind\r\n* zsh with [oh-my-zsh](https://github.com/robbyrussell/oh-my-zsh)\r\n* git, subversion\r\n* mc, vim, screen, tmux, curl\r\n* [MailCatcher](http://mailcatcher.me/)\r\n* [Composer](http://getcomposer.org/)\r\n* [Drush](http://drupal.org/project/drush)\r\n\r\nNotes\r\n-----\r\n\r\n### Apache virtual hosts\r\n\r\nYou can add virtual hosts to apache by adding a file to the `data_bags/sites`\r\ndirectory. A docroot will be created automatically in the `public` folder, or \r\nyou may specify a docroot explicitly by adding a docroot key in the json file.  \r\n\r\n### phpMyAdmin\r\n\r\nphpMyAdmin is available on every domain. For example:\r\n\r\n    http://local.dev/phpmyadmin\r\n\r\n### XDebug and webgrind\r\n\r\nXDebug is configured to connect back to your host machine on port 9000 when \r\nstarting a debug session from a browser running on your host. A debug session is \r\nstarted by appending GET variable XDEBUG_SESSION_START to the URL (if you use an \r\nintegrated debugger like Eclipse PDT, it will do this for you).\r\n\r\nXDebug is also configured to generate cachegrind profile output on demand by \r\nadding GET variable XDEBUG_PROFILE to your URL. For example:\r\n\r\n    http://local.dev/index.php?XDEBUG_PROFILE\r\n\r\nWebgrind is available on each domain. For example:\r\n\r\n    http://local.dev/webgrind\r\n\r\nIt looks for cachegrind files in the `/tmp` directory, where xdebug leaves them.\r\n\r\n**Note:** xdebug uses the default value for xdebug.profiler_output_name, which \r\nmeans the output filename only includes the process ID as a unique part. This \r\nwas done to prevent a real need to clean out cachgrind files. If you wish to \r\nconfigure xdebug to always generate profiler output \r\n(`xdebug.profiler_enable = 1`), you *will* need to change this setting to \r\nsomething like\r\n \r\n    xdebug.profiler_output_name = cachegrind.out.%t.%p\r\n    \r\nso your call to webgrind will not overwrite the file for the process that \r\nhappens to serve webgrind. \r\n\r\n### Mailcatcher\r\n\r\nPHP is configured to send mail via MailCatcher, so you can see the emails that \r\nthe vagrant box generates. The Web frontend for MailCatcher is running on port \r\n1080 and also available on every domain:\r\n\r\n    http://local.dev:1080\r\n\r\n### Composer\r\n\r\nComposer binary is installed globally (to `/usr/local/bin`), so you can simply call `composer` from any directory.\r\n","google":"UA-24722911-3","note":"Don't delete this file! It's used internally to help with page regeneration."}